{"version":3,"sources":["../src/log.js"],"names":["globalThis","ROARR","message","write","body","JSON","stringify"],"mappings":";;;;;;;AAEA;;AACA;;;;AAKA,IAAMA,UAAU,GAAG,0BAAnB;AAEAA,UAAU,CAACC,KAAX,GAAmB,gDAAgCD,UAAU,CAACC,KAAX,IAAoB,EAApD,CAAnB;;eAQe,6BAAa,UAACC,OAAD,EAAa;AACvC,MAAIF,UAAU,CAACC,KAAX,CAAiBE,KAArB,EAA4B;AAC1B,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAb;AAEAF,IAAAA,UAAU,CAACC,KAAX,CAAiBE,KAAjB,CAAuBC,IAAvB;AACD;AACF,CANc,C","sourcesContent":["// @flow\n\nimport createGlobalThis from 'globalthis';\nimport {\n  createLogger,\n  createRoarrInititialGlobalState,\n} from './factories';\n\nconst globalThis = createGlobalThis();\n\nglobalThis.ROARR = createRoarrInititialGlobalState(globalThis.ROARR || {});\n\nexport type {\n  LoggerType,\n  MessageType,\n  TranslateMessageFunctionType,\n} from './types';\n\nexport default createLogger((message) => {\n  if (globalThis.ROARR.write) {\n    const body = JSON.stringify(message);\n\n    globalThis.ROARR.write(body);\n  }\n});\n"],"file":"log.js"}